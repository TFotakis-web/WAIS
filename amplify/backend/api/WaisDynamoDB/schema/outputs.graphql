type UserProfileOutput {
    id: ID
    username: String!
    email: String!
    role: UserRole!
    telephone: String!
    name: String
    fathers_name: String
    address: String
    zip_code: String
    mobile: String
    tin: String
    family_name: String
    gender: String
    birthdate: AWSDate
    city: String
    profilePicture: S3Object
    preferences: AWSJSON
    locale: String
    files: [S3Object]
    createdAt: AWSDateTime!
    updatedAt: AWSDateTime!
}

type OfficeOutput {
    id: ID
    officeName: String!
    ownerUsername: String!
    address: String
    office_email: String!
    zip_code: String
    mobile: String
    phone: String!
    partnersNumberLimit: Int
    employeesNumberLimit: Int
    verified: Boolean
    tin: String!
    professionStartDate: AWSDate
    chamberRecordNumber: String
    insuranceLicenseExpirationDate: AWSDate
    civilLiabilityExpirationDate: AWSDate
    bankAccountInfo: AWSJSON
    files: [S3Object]
    insuranceCompanies: [InsuranceCompany!]
    createdAt: AWSDateTime!
    updatedAt: AWSDateTime!
}
#
type VehicleOutput {
    id: ID
    numberPlate: String!
    officeId: ID!
    officeName: String!
    color: String!
    manufacturer: String!
    model: String!
    vehicle_owner: String!
    trim: String!
    fuelType: String
    usage: String!
    displacement: Int!
    eurotax: Int!
    firstRegistrationDate: String!
    passengers: Int!
    purchaseDate: String!
    taxableHorsepower: Int!
    vin: String!
    value: Float!
    file: [S3Object]
    createdAt: AWSDateTime!
    updatedAt: AWSDateTime!
}

type ContractOutput {
    id: ID
    contractId: ID!
    version: Int!
    vehicleNumberPlate: String!
    vehicleId: ID!
    voucherId: String!
    customerId: String!
    officeName: String!
    second_officeId: String
    contractorId: String
    co_name: String
    co_TRN: String
    contractState: String!
    insuranceClass: String!
    insuranceCoverage: [String]
    insuranceUsage: String
    duration: String!
    startDate: String!
    endDate: String!
    data: String!
    discount: Float!
    jointWorth: Float!
    netWorth: Float!
    driversLicense: DriversLicense
    createdAt: AWSDateTime!
    updatedAt: AWSDateTime!
}

type CustomerOutput {
    id: ID
    tin: String!
    officeName: String!
    firstName: String
    lastName: String
    fathersName: String
    birthDate: String
    gender: String
    email: String!
    mobile: String
    zip_code: String
    doy: String
    address: String
    familyStatus: String
    files: [S3Object]
    driversLicense: DriversLicense
    createdAt: AWSDateTime!
    updatedAt: AWSDateTime!
}

type OfficeUserConnectionOutput {
    id: ID
    officeId: ID!
    officeName: String!
    userId: ID!
    username: String!
    office: OfficeOutput
    user: UserProfileOutput
    pagePermissions: AWSJSON!
    modelPermissions: [ModelPermission!]!
    employeeType: EmployeeType!
    preferences: AWSJSON
    createdAt: AWSDateTime!
    updatedAt: AWSDateTime!
}

type OfficeContractConnectionOutput {
    id: ID
    officeId: ID!
    officeName: String!
    contractId: ID!
    ownsContract: Boolean!
    createdAt: AWSDateTime!
    updatedAt: AWSDateTime!
}

type OfficeAccessConnectionOutput {
    id: ID
    fromId: ID!
    fromOfficeName: String!
    toId: ID!
    toOfficeName: String!
    expirationDate: AWSTimestamp!
    message: String
    createdAt: AWSDateTime!
    updatedAt: AWSDateTime!
}

type UserCalendarEventOutput {
    id: ID!
    username: String
    payload: String
    createdAt: AWSDateTime
    updatedAt: AWSDateTime
}

type TransactionHistoryOutput {
    id: ID
    senderUserProfileId: ID!
    receiverUserProfileId: ID!
    timestamp: AWSTimestamp!
    senderUsername: String!
    receiverUsername: String!
    transactionAmount: Float!
    createdAt: AWSDateTime!
    updatedAt: AWSDateTime!
}

type RequestsOutput {
    id: ID
    senderUsername: String!
    senderEmail: String!
    receiverEmail: String!
    type: RequestType!
    payload: CreateRequestPayload!
    createdAt: AWSDateTime!
    updatedAt: AWSDateTime!
}

type ModelOfficeConnectionOutput {
    items: [OfficeOutput]
    nextToken: String
}

type ModelUserCalendarEventConnectionOutput {
    items: [UserCalendarEventOutput]
    nextToken: String
}

type ModelRequestsConnectionOutput {
    items: [RequestsOutput]
    nextToken: String
}

type ModelUserProfileConnectionOutput {
    items: [UserProfileOutput]
    nextToken: String
}

type ModelOfficeUserConnectionOutput {
    items: [OfficeUserConnectionOutput]
    nextToken: String
}

type ModelCustomerConnectionOutput {
    items: [CustomerOutput]
    nextToken: String
}

type ModelOfficeAccessConnectionOutput {
    items: [OfficeAccessConnectionOutput]
    nextToken: String
}

type InsuranceCompanyDetailsOutput {
    id: ID
    officeName: String
    insuranceCompanies: [InsuranceCompany!]
}

type IDOutput {
    id: ID
}

type S3ObjectOutput {
    content: String
    path: String
    size: Int
    contentType: String
}